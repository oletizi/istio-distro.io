<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Istio on Tetrate Istio Distro | Simple, safe enterprise-grade Istio</title><link>https://istio.tetratelabs.io/tags/istio/</link><description>Recent content in Istio on Tetrate Istio Distro | Simple, safe enterprise-grade Istio</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright &amp;copy; 2021 Tetrate</copyright><lastBuildDate>Wed, 07 Apr 2021 10:03:00 +0800</lastBuildDate><atom:link href="https://istio.tetratelabs.io/tags/istio/index.xml" rel="self" type="application/rss+xml"/><item><title>Tuya Smart’s Implementation of an Istio Enterprise-level Production</title><link>https://istio.tetratelabs.io/blog/tuya-istio-practice/</link><pubDate>Wed, 07 Apr 2021 10:03:00 +0800</pubDate><guid>https://istio.tetratelabs.io/blog/tuya-istio-practice/</guid><description>An Istio use case of Tuya Smart. Background As the most active service mesh project at present, Istio provides numerous capabilities, including traffic management, security, and observability. Each capability is necessary for the management, operation, and maintenance of services. Istio&amp;rsquo;s extensive capabilities also bring certain challenges to the operation and maintenance of complex systems. In terms of its capabilities and future scalability, Istio reimagines service management, bringing about new opportunities</description></item><item><title>How to debug services with Istio?</title><link>https://istio.tetratelabs.io/blog/debugging-services-with-istio/</link><pubDate>Thu, 04 Mar 2021 15:15:00 +0000</pubDate><guid>https://istio.tetratelabs.io/blog/debugging-services-with-istio/</guid><description>In this blog, we will explain a couple of approaches you can use to debug services running inside your Kubernetes cluster, without deploying the version of the service you want to debug to the cluster.
Using traffic mirroring One way to debug the services is to use traffic mirroring. The way traffic mirroring works is that it copies the real traffic and sents it to the mirrored version. Any responses from the mirrored service get dropped, so real traffic is not being affected at all.</description></item><item><title>How does Istio service mesh deal with security?</title><link>https://istio.tetratelabs.io/blog/istio-security/</link><pubDate>Thu, 04 Mar 2021 12:15:00 +0000</pubDate><guid>https://istio.tetratelabs.io/blog/istio-security/</guid><description>In this blog, I will explain how Istio can help to solve issues such as encrypting traffic, provide flexible service access control, configure mutual TLS and fine-grained access policies and auditing.
Istio Security Architecture The following Istio components are involved in providing security features in Istio:
Certificate authority (CA) for managing keys and certificates Sidecar and perimeter proxies: implement secure communication between clients and servers (they work as Policy Enforcement Points (PEPs) Envoy proxy extensions: manage telemetry and auditing Configuration API server: distributes authentication, authorization policies and secure naming information Policy Enforcement Point (PEP) is a component that serves as a gatekeeper to a resource.</description></item><item><title>How to use Istio to test service resiliency?</title><link>https://istio.tetratelabs.io/blog/testing-services-with-istio/</link><pubDate>Wed, 03 Mar 2021 12:15:00 +0000</pubDate><guid>https://istio.tetratelabs.io/blog/testing-services-with-istio/</guid><description>In this blog, we will talk about how to use Istio service mesh features that can help you to test the resiliency of the services.
Making Services Fail In the name of testing the service resiliency, you need a way to make your services fail and behave the way you want them to behave. Having the ability to make services fail is a great way to test them, discover how they behave in certain conditions and find any potential issues.</description></item><item><title>What are the patterns of resilience in Istio?</title><link>https://istio.tetratelabs.io/blog/istio-resiliency-patterns/</link><pubDate>Mon, 01 Mar 2021 12:15:00 +0000</pubDate><guid>https://istio.tetratelabs.io/blog/istio-resiliency-patterns/</guid><description>This blog talks about Istio service mesh features that can help you with service resiliency.
What is Resiliency? The first thing you are going to notice once you start breaking down your monolithic application to smaller, more manageable chunks (microservices) or if you are planning to start implementing microservices architecture from scratch, is that you will have more things to manage and think about. Previously, you had a single code base, one deployment.</description></item><item><title>Hands-on walkthrough of traffic management in Istio Part 2</title><link>https://istio.tetratelabs.io/blog/istio-traffic-management-walkthrough-p2/</link><pubDate>Tue, 23 Feb 2021 13:15:00 +0000</pubDate><guid>https://istio.tetratelabs.io/blog/istio-traffic-management-walkthrough-p2/</guid><description>This blog is the second part of Istio&amp;rsquo;s hands-on traffic management practice. See the Hands-on walkthrough of traffic management in Istio Part 1. I will show you how to do more advanced with match conditions on request parameters (e.g. URL, headers). Finally, I will talk about mirroring production traffic to a newly deployed service without impacting end-users.
Advanced Traffic Splitting Sometimes splitting requests by weight might not be enough, and luckily Istio supports doing more advanced request matching.</description></item><item><title>Hands-on walkthrough of traffic management in Istio Part 1</title><link>https://istio.tetratelabs.io/blog/istio-traffic-management-walkthrough-p1/</link><pubDate>Tue, 23 Feb 2021 12:15:00 +0000</pubDate><guid>https://istio.tetratelabs.io/blog/istio-traffic-management-walkthrough-p1/</guid><description>In this blog, I will talk about how to get started with routing traffic between your services using service mesh. You will learn how to set up an Ingress resource to allow traffic into your cluster as well as an Egress resource to enable traffic to exit your cluster. I will explain how to deploy a new version of the service and run it alongside with the released production version of the service without disrupting production traffic.</description></item><item><title>An Istio-based Traffic Management Use Case of eBay</title><link>https://istio.tetratelabs.io/blog/ebay-istio-practice/</link><pubDate>Fri, 12 Feb 2021 10:03:00 +0800</pubDate><guid>https://istio.tetratelabs.io/blog/ebay-istio-practice/</guid><description>As a centralized cloud platform, Kubernetes manages multiple heterogeneous applications, including online services, big data, and backend searches. The number of clusters reaches up to the hundreds. In large clusters, thousands of microservices and hundreds of thousands of pods are run in a single cluster. Needless to say, different types of applications have different traffic management needs. The question then arises: how do we address these different needs with a centralized model?</description></item><item><title>How Coohom Uses Istio to Integrate a New Serverless System into its Existing Self-developed Java System</title><link>https://istio.tetratelabs.io/blog/coohom-istio-practice/</link><pubDate>Fri, 12 Feb 2021 10:03:00 +0800</pubDate><guid>https://istio.tetratelabs.io/blog/coohom-istio-practice/</guid><description>Coohom successfully launched its home cloud design platform based on the core technology of distributed parallel computing and multimedia data mining. The platform is committed to the research and development of cloud rendering, cloud design, BIM, VR, AR, AI, and other technologies, in order to achieve the experience of “What You See Is What You Get”. It is an SAAS cloud software</description></item><item><title>What's new in Istio 1.9?</title><link>https://istio.tetratelabs.io/blog/whats-new-istio-1-9/</link><pubDate>Wed, 10 Feb 2021 12:15:00 +0000</pubDate><guid>https://istio.tetratelabs.io/blog/whats-new-istio-1-9/</guid><description>On February 9, Istio announced the release of Istio 1.9. In this release, we can see the wider adoption of VMs into the service mesh, and even better VM support, cert issuance to VMs, and health checking for the workload entry. Istio’s latest releases, 1.7 and 1.8, made a lot of progress toward making VMs first-class workloads in the mesh, and cert issuance has been the final gap to close.</description></item></channel></rss>